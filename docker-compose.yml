# ==============================================================================
# Docker Compose for Nonprofit Fund Accounting Application
# ==============================================================================
# This file orchestrates the multi-container setup for the application,
# including the Node.js backend and the PostgreSQL database.
#
# To run:
#   docker-compose up -d --build
#
# To stop:
#   docker-compose down
#
# To view logs:
#   docker-compose logs -f app
#   docker-compose logs -f db
# ==============================================================================

version: '3.8'

services:
  # ----------------------------------------------------------------------------
  # PostgreSQL Database Service
  # ----------------------------------------------------------------------------
  db:
    image: postgres:15-alpine
    container_name: npfa_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: npfa123
      POSTGRES_DB: fund_accounting_db
    volumes:
      # Mounts the named volume to persist database data
      - db-data:/var/lib/postgresql/data
    networks:
      - npfa-network
    healthcheck:
      # Checks if the database is ready to accept connections
      test: ["CMD-SHELL", "pg_isready -U postgres -d fund_accounting_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ----------------------------------------------------------------------------
  # Node.js Application Service
  # ----------------------------------------------------------------------------
  app:
    container_name: npfa_app
    # Build the image from the Dockerfile in the current directory
    build: .
    restart: always
    ports:
      # Maps port 3000 on the host to port 3000 in the container
      - "3000:3000"
    depends_on:
      db:
        # Ensures the app only starts after the database is healthy
        condition: service_healthy
    env_file:
      # Loads environment variables from the .env file
      - .env
    environment:
      # Overrides the PGHOST to use the database service name on the Docker network
      - PGHOST=db
    networks:
      - npfa-network

# ------------------------------------------------------------------------------
# Top-level keys for network and volume definitions
# ------------------------------------------------------------------------------
volumes:
  # Defines a named volume for persistent database storage
  db-data:
    driver: local

networks:
  # Defines a custom bridge network for secure communication between services
  npfa-network:
    driver: bridge
